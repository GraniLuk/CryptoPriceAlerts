# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - AlertsFunctionGrani

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.11' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          # Freeze dependencies to ensure version consistency
          pip freeze > requirements.txt

      - name: Package app with dependencies
        run: |
          source venv/bin/activate
          mkdir -p packaged_function
          # Copy all files except the 'packaged_function' directory itself
          shopt -s extglob
          cp -r !(packaged_function) packaged_function/
          cp -r venv/lib/python${{ env.PYTHON_VERSION }}/site-packages/* packaged_function/
          cd packaged_function
          zip -r ../release.zip .
    
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip     
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_25A6752115FD427CA6F434FC29D9562E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2575A1B6B2D04A0997FB3D4736068E2D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_694FC964507A4749A9DC27079893A4B3 }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'AlertsFunctionGrani'
          slot-name: 'Production'
          package: 'release.zip'
          scm-do-build-during-deployment: true
          enable-oryx-build: true

      - name: 'Update Function App Settings'
        uses: Azure/appservice-settings@v1
        with:
          app-name: 'AlertsFunctionGrani'
          app-settings-json: '[
            {
              "name": "TELEGRAM_TOKEN",
              "value": "${{ secrets.TELEGRAM_TOKEN }}",
              "slotSetting": false
            },
            {
              "name": "TELEGRAM_ENABLED",
              "value": "${{ secrets.TELEGRAM_ENABLED }}",
              "slotSetting": false
            },
            {
              "name": "TELEGRAM_CHAT_ID",
              "value": "${{ secrets.TELEGRAM_CHAT_ID }}",
              "slotSetting": false
            },
            {
              "name": "COINGECKO_API_KEY",
              "value": "${{ secrets.COINGECKO_API_KEY }}",
              "slotSetting": false
            },
            {
              "name": "AZURE_STORAGE_SHARE_NAME",
              "value": "${{ secrets.AZURE_STORAGE_SHARE_NAME }}",
              "slotSetting": false
            },
            {
              "name": "AZURE_STORAGE_STORAGE_ACCOUNT",
              "value": "${{ secrets.AZURE_STORAGE_STORAGE_ACCOUNT }}",
              "slotSetting": false
            },
            {
              "name": "AZURE_STORAGE_STORAGE_ACCOUNT_KEY",
              "value": "${{ secrets.AZURE_STORAGE_STORAGE_ACCOUNT_KEY }}",
              "slotSetting": false
            },
            {
              "name": "BYBIT_API_KEY",
              "value": "${{ secrets.BYBIT_API_KEY }}",
              "slotSetting": false
            },
            {
              "name": "BYBIT_API_SECRET",
              "value": "${{ secrets.BYBIT_API_SECRET }}",
              "slotSetting": false
            },
            {
              "name": "BYBIT_TESTNET",
              "value": "${{ secrets.BYBIT_TESTNET }}",
              "slotSetting": false
            },
            {
              "name": "COINMARKETCAP_API_KEY",
              "value": "${{ secrets.COINMARKETCAP_API_KEY }}",
              "slotSetting": false
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}",
              "slotSetting": false
            }]'

      - name: Install dependencies on Azure
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt